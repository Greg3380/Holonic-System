package pl.edu.agh.agentsystem.^agent

import io.sarl.core.Initialize
import io.sarl.core.Logging
import java.util.HashMap
import io.sarl.core.Behaviors
import io.sarl.core.Lifecycle
import io.sarl.core.InnerContextAccess
import pl.edu.agh.agentsystem.^event.ProductParameters
import pl.edu.agh.agentsystem.utils.ChemicalElement
import pl.edu.agh.agentsystem.^agent.ProductSupervisor

agent Root {
	uses Logging, Behaviors, Lifecycle, InnerContextAccess
	on Initialize {
		info("Create agent Supervisor")
		val totalWeight = 50.5f
		val refinementLevel = 2
		val compositionOfTheProduct = new HashMap<ChemicalElement, Float>()
		compositionOfTheProduct.put(ChemicalElement.COPPER, 0.835f)
		compositionOfTheProduct.put(ChemicalElement.TIN, 0.09f)
		compositionOfTheProduct.put(ChemicalElement.LEAD, 0.045f)
		compositionOfTheProduct.put(ChemicalElement.PHOSPHORUS, 0.03f)
		val maxPollution = 0.1f
		val cost = 3000
		val request = new ProductParameters(totalWeight, 
			refinementLevel,
			compositionOfTheProduct,
			maxPollution,
			cost)

		info("Sending request")
		spawnInContext(typeof(ProductSupervisor), getInnerContext)
		wake(request)
	}
}
